//Utility class with a few static functions to help creating a message for the Special dice module

export class genesysUtil {
	//Index is as follows 0= boost 1= abiltiy 2= proficency 3=setback 4=difficulty 5=challenge
	//every array handled here is assumed to be in this format example: [2,3,4,1,1,0]

	//takes the afore mentioned array and builds a string starting with /gen
	//skips all fields where 0 dice are since otherwise the special dice module would not roll
	static diceArrayToString(array) {
		if (Array.isArray(array)) {
			var diceArray = ["b", "a", "p", "s", "d", "c"];
			var diceMsg = "";
			for (let i = 0; i < 6; i++) {
				if (array[i] != 0) {
					diceMsg += array[i];
					diceMsg += diceArray[i];
				}
			}
		} else {
			diceMsg = "Something went wrong";
		}
		return diceMsg;
	}
	static diceArrayToSObject(object) {
		if (object != undefined) {
			var diceArray = ["a", "b", "p", "s", "d", "c"];
			var diceMsg = "/gen";
			for (let i = 0; i < 6; i++) {
				if (array[i] != 0) {
					diceMsg += " ";
					diceMsg += array[i];
					diceMsg += diceArray[i];
				}
			}
		} else {
			diceMsg = "Something went wrong";
		}
		return diceMsg;
	}

	static abilityToArray(characteristic, skill) {
		//determine how many yellow and green acording to rule for skill checks
		//green=ability yellow= proficency
		if (characteristic > skill) {
			console.log("ding1");
			var green = characteristic - skill;
			var yellow = characteristic - green;
		} else if (characteristic == skill) {
			console.log("ding2");
			green = 0;
			yellow = skill;
		} else if (characteristic < skill) {
			console.log("ding3");
			green = skill - characteristic;
			yellow = skill - green;
		}
		var array = [0, green, yellow, 0, 0, 0];
		return array;
	}

	static abilityToObject(characteristic, skill) {
		//determine how many yellow and green acording to rule for skill checks
		//green=ability yellow= proficency
		if (characteristic > skill) {
			console.log("ding1");
			var green = characteristic - skill;
			var yellow = characteristic - green;
		} else if (characteristic == skill) {
			console.log("ding2");
			green = 0;
			yellow = skill;
		} else if (characteristic < skill) {
			console.log("ding3");
			green = skill - characteristic;
			yellow = skill - green;
		}
		var object = {
			ability: green,
			boost: 0,
			proficency: yellow,
			setback: 0,
			difficulty: 0,
			challenge: 0,
		};
		//    array[0]=green;
		//    array[2]=yellow;
		return object;
	}

	//wants a array that looks like the one generated by abilityToArray
	// 100. counts as a success 1 is a advantage
	//later 0.1 will be the pc/npc tiebraker
	//todo need to find a way to pass it to the combat tracker
	static genesysInitiative(array) {
		var yellowDie = [0, 100, 100, 200, 200, 1, 101, 101, 101, 2, 2, 100];
		var greenDie = [0, 100, 100, 200, 1, 1, 101, 2];
		var initiative = 0;
		//green
		if (array[0] > 0) {
			for (let i = 0; i < array[0]; i++) {
				initiative = initiative + greenDie[Math.floor(Math.random() * 8)];
				console.log(initiative);
			}
		}
		//yellow
		if (array[2] > 0) {
			for (let i = 0; i < array[2]; i++) {
				initiative = initiative + yellowDie[Math.floor(Math.random() * 12)];
				console.log(initiative);
			}
		}
		console.log(initiative);
		return initiative;
	}
}
